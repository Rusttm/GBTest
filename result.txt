1. Используя команду cat в терминале операционной системы Linux, создать
два файла
Домашние животные (заполнив файл собаками, кошками,
хомяками)
$ cat <<EOT >> Домашние_животные.txt
> собака
> кошка
> хомяк
> кролик
> EOT

и Вьючные животными заполнив файл Лошадьми, верблюдами и
ослы),
$ cat <<EOT >> Вьючные_животные.txt
> лошадь
> верблюд
> осел
> EOT

а затем объединить их.
$ cat  Домашние_животные.txt Вьючные_животные.txt >> объединенный_файл.txt

Просмотреть содержимое созданного файла.
$ cat Домашние_животные.txt

Переименовать файл, дав ему новое имя (Друзья человека).
$ mv объединенный_файл.txt Друзья_человека.txt

2. Создать директорию,
$ mkdir new_dir

переместить файл туда
$ mv Друзья_человека.txt ./new_dir

3. Подключить дополнительный репозиторий MySQL. Установить любой пакет
из этого репозитория
$ sudo apt install mysql-server

4. Установить
$ sudo dpkg - i /home/rusttm/Downloads/mysql-apt-config_0.8.26-1_all.deb

и удалить deb-пакет с помощью dpkg.
$ sudo dpkg -P mysql

5. Выложить историю команд в терминале ubuntu

6. Нарисовать диаграмму, в которой есть класс родительский класс, домашние
животные и вьючные животные, в составы которых в случае домашних
животных войдут классы: собаки, кошки, хомяки, а в класс вьючные животные
войдут: Лошади, верблюды и ослы).
(см. Class_diagram.pdf)

7. В подключенном MySQL репозитории создать базу данных “Друзья
человека”

8. Создать таблицы с иерархией из диаграммы в БД

9. Заполнить низкоуровневые таблицы именами(животных), командами
которые они выполняют и датами рождения

10. Удалив из таблицы верблюдов, т.к. верблюдов решили перевезти в другой
питомник на зимовку. Объединить таблицы лошади, и ослы в одну таблицу.

11.Создать новую таблицу “молодые животные” в которую попадут все
животные старше 1 года, но младше 3 лет и в отдельном столбце с точностью
до месяца подсчитать возраст животных в новой таблице

12. Объединить все таблицы в одну, при этом сохраняя поля, указывающие на
прошлую принадлежность к старым таблицам.

Примечание к пп13-15: Нигде не написано об языке программирования, и я задавал вопрос насчет возможности использования Python.
Ответа так и не получил, поэтому написал на нем.

13.Создать класс с Инкапсуляцией методов и наследованием по диаграмме.
Ответ: class AnimalsMainClass - корневой

14. Написать программу, имитирующую работу реестра домашних животных.
В программе должен быть реализован следующий функционал:

Ответ: написал две программы, обе работают.
в папке AnimalsProgram -простая программа для работы с базой данных, работает со словарями
в папке AnimalsProgram_v2 -сохранений в базу нет, но работа идет со списком объектов разных классов

14.1 Завести новое животное
14.2 определять животное в правильный класс
Ответ: не совсем понятно, что имелось ввиду, т.к. классы вроде жестко прописаны
и при заведении нового класс берется автоматически

14.3 увидеть список команд, которое выполняет животное
14.4 обучить животное новым командам
Ответ: сделал в одном меню со списком животных и текущих команд,
т.к. для обоих пунктов(14.3 и 14.4) требуется этот список

14.5 Реализовать навигацию по меню
Ответ: навигация сделана с помощью класса MenuMainClass

15.Создайте класс Счетчик, у которого есть метод add(), увеличивающий̆
значение внутренней̆int переменной̆на 1 при нажатие “Завести новое
животное” Сделайте так, чтобы с объектом такого типа можно было работать в
блоке try-with-resources. Нужно бросить исключение, если работа с объектом
типа счетчик была не в ресурсном try и/или ресурс остался открыт. Значение
считать в ресурсе try, если при заведения животного заполнены все поля.

Ответ: не совсем ясно, что имелось ввиду?
по-моему, для работы try нужно выбрасывать ошибку,
а зачем ее выбрасывать при незаполненных полях,
когда можно пользователя попросить исправить?

Сделал в виде:
try:
    добавить новые команды животному
except:
    пропустить добавление
else:
    увеличить счетчик
